<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>
</head>

<body>

  <% include ../partials/nav.ejs %>

<div class="jumbotron text-center">
  <div class="container">
    <a href="/" class="lang-logo">
      <img src="http://gilgamech.com/images/Gil.jpg">
    </a>
    <h1>Enkida is now on Heroku</h1>
    <p>This is a new Slack and chat bot. It's a new incarnation of the familiar internet search bot. She looks up random things from your chat on the internet.</p>
    <a type="button" class="btn btn-lg btn-default" href="https://github.com/Gilgamech/Enkida/issues"><span class="glyphicon glyphicon-flash"></span> Tell the nutter there's something wrong with his app.</a>
    <a type="button" class="btn btn-lg btn-primary" href="https://github.com/Gilgamech/Enkida/"><span class="glyphicon glyphicon-download"></span> Source on GitHub</a>
  </div>
</div>
<div class="container">
  <div class="alert alert-info text-center" role="alert">
    To deploy your own copy, and learn the fundamentals of the Heroku platform, head over to the <a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs" class="alert-link">Getting Started with Node on Heroku</a> tutorial.
  </div>
  <hr>
  <div class="row">
  
  
    <div class="col-md-6">
      <h3><span class="glyphicon glyphicon-info-sign"></span> SourceQuery</h3>
      <ul>
        <li>Currently in late Alpha, SteamQuery for Powershell gives you 3 simple cmdlets to query any Steam server for numerous datapoints, including: </li>
			<ul>
				<li>Player list with Steam names</li>
				<li>Player connection count and connected time</li>
				<li>Map name</li>
				<li>Server OS</li>
		  </ul>
		<li><a href="https://Github.com/Gilgamech/SteamQuery">Check out SteamQuery here.</a></li>
	</ul>

      <h3><span class="glyphicon glyphicon-info-sign"></span> PowerGIL</h3>
      <ul>
        <li>Currently Build 568, PowerGIL is a Powershell utility kit.</li>
		<li>It provides numerous useless tools, ranging from: </li>
			<ul>
				<li>making new Powershell windows and resizing current windows</li>
				<li>opening Explorer windows</li>
				<li>encrypting and decrypting text messages</li>
				<li>sending and reciving with UDP</li>
				<li>watching your clipboard and even sending it to another PC with UDP!</li> 
				<li>Flip your text into bytes and back!</li>
		  </ul>
		<li><a href="http://Gilgamech.com/PS1/PowerGIL.ps1">Check out PowerGIL here.</a></li>
	  </ul>

     <h3><span class="glyphicon glyphicon-info-sign"></span> ARKData</h3>
      <ul>
        <li>Now in its 2.2 revision, the ARKData player tracker now can track multiple servers simultaneously.</li>
		<li>Just give it an IP and it does the rest:</li>
			<ul>
				<li>find the server</li>
				<li>get players</li>
				<li>time of day</li>
				<li>write data files</li>
				<li>Stamp self-refreshing website report dashboards every minute.</li>
		  </ul>
		<li>Filling out the .tribe.csv data file is still a manual process, but for a little bit of work (typing out the ARK name and Tribe name) you get crazy more useful data.</li>
		<li>All written in Powershell.</li> 
		<li><a href="http://Gilgamech.com/Arkdata.html">Check out Arkdata here.</a></li>
		<li><a href="https://Github.com/Gilgamech/SteamQuery">Github page.</ul>
    </div>
    <div class="col-md-6">
      <h3><span class="glyphicon glyphicon-info-sign"></span> How this sample app works</h3>
      <ul>
        <li>This app was deployed to Heroku, either using Git or by using <a href="https://github.com/heroku/node-js-getting-started">Heroku Button</a> on the repository.</li>

        <li>When Heroku received the source code, it fetched all the dependencies in the <a href="https://github.com/heroku/node-js-getting-started/blob/master/package.json">package.json</a>, creating a deployable slug.</li>
        <li>The platform then spins up a dyno, a lightweight container that provides an isolated environment in which the slug can be mounted and executed.</li>
        <li>You can scale your app, manage it, and deploy over <a href="https://addons.heroku.com/">150 add-on services</a>, from the Dashboard or CLI.</li>
      </ul>
    </div>
	
    <div class="col-md-6">
      <h3><span class="glyphicon glyphicon-link"></span> Next Steps</h3>
      <ul>
        <li>If you are following the <a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs">Getting Started</a> guide, then please head back to the tutorial and follow the next steps!</li>
        <li>If you deployed this app by deploying the Heroku Button, then in a command line shell, run:</li>
        <ul>
          <li><code>git clone https://github.com/heroku/node-js-getting-started.git</code> - this will create a local copy of the source code for the app</li>
          <li><code>cd node-js-getting-started</code> - change directory into the local source code repository</li>
          <li><code>heroku git:remote -a &lt;your-app-name></code> - associate the Heroku app with the repository</li>
          <li>You'll now be set up to run the app locally, or <a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs#push-local-changes">deploy changes</a> to Heroku</li>
        </ul>
      </ul>
      <h3><span class="glyphicon glyphicon-link"></span> Helpful Links</h3>
      <ul>
        <li><a href="https://www.heroku.com/home">Heroku</a></li>
        <li><a href="https://devcenter.heroku.com/">Heroku Dev Center</a></li>
        <li><a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs">Getting Started with Node on Heroku</a></li>
        <li><a href="https://devcenter.heroku.com/articles/deploying-nodejs">Deploying Node Apps on Heroku</a></li>
      </ul>
    </div>
  </div> <!-- row -->
   <div class="alert alert-info text-center" role="alert">
    Please do work through the Getting Started guide, even if you do know how to build such an application.  The guide covers the basics of working with Heroku, and will familiarize you with all the concepts you need in order to build and deploy your own apps.
  </div>
</div>


  <% include ../partials/footer.ejs %>
</body>
</html>
